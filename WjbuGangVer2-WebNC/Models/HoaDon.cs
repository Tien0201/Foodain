//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WjbuGangVer2_WebNC.Models
{
    using Microsoft.Ajax.Utilities;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Web;   
    using System.Web.ModelBinding;
    using static Slapper.AutoMapper;

    public partial class HoaDon
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public HoaDon()
        {
            this.ChiTietHoaDons = new HashSet<ChiTietHoaDon>();
        }
    
        public int MaHD { get; set; }
        public Nullable<System.DateTime> Ngay { get; set; }
        public Nullable<int> SoLuong { get; set; }
        public double TongTien { get; set; }
        public string ChiTiet { get; set; }
        public int MaPT { get; set; }
        public int AccountID { get; set; }
        public Nullable<int> VoucherID { get; set; }
        public Nullable<int> TinhTrang { get; set; }
    
        public virtual Account Account { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ChiTietHoaDon> ChiTietHoaDons { get; set; }
        public virtual PhuongThucThanhToan PhuongThucThanhToan { get; set; }
        public virtual Voucher Voucher { get; set; }

        public List<HoaDonItem> items = new List<HoaDonItem>();
        public IEnumerable<HoaDonItem> Items
        {
            get { return items; }
        }
        public MatHang GetProduct(int id)
        {
            return items.SingleOrDefault(s => s._shopping_product.MaMH == id)._shopping_product;
        }
        public void Add(MatHang _pro, int _quantity = 1, double _price = 0)
        {
            QLBHEntities db = new QLBHEntities();
            var item = items.FirstOrDefault(s => s._shopping_product.MaMH == _pro.MaMH);
            var getitemKM = (from x in db.MatHangs where x.MaMH == _pro.MaMH select x.MaKH).FirstOrDefault();
            var getitemprice = (from x in db.MatHangs where x.MaMH == _pro.MaMH select x.DonGia).FirstOrDefault();
            if (getitemKM == null)
            {
                _price = getitemprice;
            }
            if (getitemKM == 1)
            {
                _price = getitemprice - (getitemprice * 10 / 100);
            }
            if (getitemKM == 2)
            {
                _price = getitemprice - (getitemprice * 20 / 100);
            }
            if (getitemKM == 3)
            {
                _price = getitemprice - (getitemprice * 25 / 100);
            }
            if (getitemKM == 4)
            {
                _price = getitemprice - (getitemprice * 30 / 100);
            }
            if (getitemKM == 5)
            {
                _price = getitemprice - (getitemprice * 50 / 100);
            }
            if (getitemKM == 6)
            {
                _price = getitemprice - 10000;
            }
            if (getitemKM == 7)
            {
                _price = getitemprice - 20000;
            }
            if (getitemKM == 8)
            {
                _price = getitemprice - 30000;
            }
            if (item == null)
            {
                items.Add(new HoaDonItem
                {
                    _shopping_product = _pro,
                    _shopping_quantity = _quantity,
                    _shopping_price = _price
                });
            }
            else
            {
                item._shopping_quantity += _quantity;
            }
        }
        public void Update_Quantity_Shopping(int id, int _quatity)
        {
            var item = items.Where(s => s._shopping_product.MaMH == id).FirstOrDefault();
            if (item != null)
            {
                item._shopping_quantity = _quatity;
            }
        }

        public double Total_Money()
        {
            double total = items.Sum(s => (s._shopping_price * s._shopping_quantity));
            return total;
        }

        public double New_Total_Money(double voucher_price)
        {
            double total = items.Sum(s => (s._shopping_price * s._shopping_quantity));
            if (voucher_price > 100)
            {
                return total - voucher_price;
            }
            else
            {
                return total - (total * voucher_price / 100);
            }
        }

        public void Remove_CartItem(int id)
        {
            items.RemoveAll(s => s._shopping_product.MaMH == id);
        }
        public int Total_Quantity()
        {
            return items.Sum(s => s._shopping_quantity);
        }
        public void Clear_Cart()
        {
            items.Clear();
        }
    }
    public class HoaDonItem
    {
        public MatHang _shopping_product { get; set; }
        public int _shopping_quantity { get; set; }
        public double _shopping_price { get; set; }
    }

    public class HoaDonAdmin
    {
        public HoaDon hoaDon { get; set; }
        public List<HoaDonItem> items { get; set; }
    }
}

